{"version":3,"sources":["services/entries.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","Line","name","number","deleteCall","onClick","Phonebook","list","map","entry","i","key","EntryForm","entryHandler","nameHandler","numberHandler","onSubmit","value","onChange","type","Notification","message","className","App","useState","persons","setPersons","newName","setnewName","newNumber","setnewNumber","infoMessage","setInfoMessage","useEffect","entryService","then","initialPersons","data","event","preventDefault","entryObject","undefined","find","person","returnedPerson","concat","setTimeout","window","alert","target","confirm","response","filter","ReactDOM","render","document","getElementById"],"mappings":"yQACMA,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,IAeJ,EAZA,SAACG,GACd,OAAOF,IAAMG,KAAKJ,EAASG,IAWd,EAJM,SAACE,GACpB,OAAOJ,IAAMK,OAAN,UAAgBN,EAAhB,YAA2BK,KCb9BE,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQJ,EAAjB,EAAiBA,GAAIK,EAArB,EAAqBA,WAArB,OACX,4BAAKF,EAAL,IAAYC,EAAZ,IAAoB,4BAAQE,QAAS,WAAOD,EAAWL,KAAnC,YAGhBO,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMH,EAAiB,EAAjBA,WACzB,OACE,4BACGG,EAAKC,KAAI,SAACC,EAAOC,GAAR,OACR,kBAAC,EAAD,CACER,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,OACdQ,IAAKF,EAAMV,GACXA,GAAIU,EAAMV,GACVK,WAAYA,SAOhBQ,EAAY,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,YAAaC,EAA5C,EAA4CA,cAA5C,OAChB,0BAAMC,SAAUH,GACd,sCACQ,2BAAOI,MAAOf,EAAMgB,SAAUJ,KAEtC,wCACU,2BAAOG,MAAOd,EAAQe,SAAUH,KAE1C,6BACE,4BAAQI,KAAK,UAAb,UAKAC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,QACZD,IA+EQE,EA1EH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERG,EAFQ,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGRK,EAHQ,KAGGC,EAHH,OAIwBN,mBAAS,MAJjC,mBAIRO,EAJQ,KAIKC,EAJL,KAShBC,qBAAU,WACNC,IAEGC,MAAK,SAAAC,GACJV,EAAWU,EAAeC,YA4ClC,OACE,6BACE,yCACA,kBAAC,EAAD,CAAchB,QAASU,IACvB,kBAAC,EAAD,CACE7B,KAAMyB,EACNxB,OAAQ0B,EACRhB,aA/CW,SAACyB,GAChBA,EAAMC,iBACN,IAAMC,EAAc,CAClBtC,KAAMyB,EACNxB,OAAQ0B,QAGKY,IADFhB,EAAQiB,MAAK,SAAAC,GAAM,OAAIA,EAAOzC,OAASyB,KAElDO,EACUM,GACPL,MAAK,SAAAS,GACJlB,EAAWD,EAAQoB,OAAOD,EAAeP,OACzCT,EAAW,IACXE,EAAa,IACbE,EAAe,4BAAD,OAAuBL,EAAvB,mBACdmB,YAAW,WACTd,EAAe,QACd,QAGPe,OAAOC,MAAP,UAAgBR,EAAYtC,KAA5B,oCA4BEY,YA3DmB,SAACwB,GAAD,OAAWV,EAAWU,EAAMW,OAAOhC,QA4DtDF,cA3DqB,SAACuB,GAAD,OAAWR,EAAaQ,EAAMW,OAAOhC,UA6D5D,uCACA,kBAAC,EAAD,CAAWV,KAAMkB,EAASrB,WA5BV,SAACL,GACnB,IAAI4C,EAASlB,EAAQiB,MAAK,SAAAC,GAAM,OAAIA,EAAO5C,KAAOA,KAE9CgD,OAAOG,QAAP,uBAA+BP,EAAOzC,KAAtC,QACFgC,EACgBnC,GACboC,MAAK,SAAAgB,GACJzB,EAAWD,EAAQ2B,QAAO,SAAAT,GAAM,OAAIA,EAAO5C,KAAOA,SAEpDiC,EAAe,2BAAD,OAAyBW,EAAOzC,KAAhC,mBACd4C,YAAW,WACTd,EAAe,QACd,WCjGXqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.108dd0d1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update , deletePerson} ","import React, { useState, useEffect } from 'react'\nimport entryService from './services/entries' \n\nconst Line = ( {name, number, id, deleteCall} ) => (\n  <li>{name} {number} <button onClick={() => {deleteCall(id)}}>delete</button></li>\n)\n\nconst Phonebook = ( {list, deleteCall} ) => {\n  return(\n    <ul>\n      {list.map((entry, i) =>\n        <Line\n          name={entry.name}\n          number={entry.number}\n          key={entry.id}\n          id={entry.id}\n          deleteCall={deleteCall}\n        />\n      )}\n    </ul>\n  )  \n}\n\nconst EntryForm = ( {name, number, entryHandler, nameHandler, numberHandler} ) => (\n  <form onSubmit={entryHandler}>\n    <div>\n      name: <input value={name} onChange={nameHandler} />\n    </div>\n    <div>\n      number: <input value={number} onChange={numberHandler} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>  \n)\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"info\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setnewName ] = useState('')\n  const [ newNumber, setnewNumber ] = useState('')\n  const [ infoMessage, setInfoMessage ] = useState(null)\n\n  const handleNameChange = (event) => setnewName(event.target.value)\n  const handleNumberChange = (event) => setnewNumber(event.target.value)\n\n  useEffect(() => {\n      entryService\n        .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons.data)\n        })\n  })  \n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const entryObject = {\n      name: newName,\n      number: newNumber\n    }\n    let person = persons.find(person => person.name === newName)\n    if (person === undefined) {\n      entryService\n        .create(entryObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson.data))\n          setnewName('')\n          setnewNumber('')\n          setInfoMessage(`Lisättiin henkilön ${newName} puhelinnumero`)\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 3000)\n        })\n    } else {\n      window.alert(`${entryObject.name} is already added to phonebook`)\n    }\n  }\n\n  const deleteEntry = (id) => {\n    let person = persons.find(person => person.id === id)\n    //console.log(`id: ${id} person: ${person}`)\n    if (window.confirm(`Poistetaanko ${person.name}?`)) {\n      entryService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        setInfoMessage(`Poistettiin henkilön ${person.name} puhelinnumero`)\n        setTimeout(() => {\n          setInfoMessage(null)\n        }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={infoMessage} />\n      <EntryForm\n        name={newName}\n        number={newNumber}\n        entryHandler={addEntry}\n        nameHandler={handleNameChange}\n        numberHandler={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Phonebook list={persons} deleteCall={deleteEntry} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}